name: release-pr

on:
  pull_request:    
    branches:
      - main

concurrency:
  group:  ${{ github.workflow }}-${{github.event_name}}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  deployments: write
  packages: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: update action.yml to build locally
        run: |
          sed -i 's/.*image\:.*/  image\: \"Dockerfile\"/' action.yml
          cat action.yml      

      - name: build
        uses: ./ # Uses an action in the root directory
        with:
          action: build

      - run: |
          ls -l dist/

      - name: export
        uses: ./ # Uses an action in the root directory
        with:
          export: png
          output: images

      - run: |
          ls -l images/

      - name: codegen react
        uses: ./ # Uses an action in the root directory
        with:
          action: codegen

      - run: |
          ls -l

      - name: codegen mmd
        uses: ./ # Uses an action in the root directory
        with:
          codegen: mmd
          output: mmd

      - run: |
          ls -l mmd/

  build-docker:
    if: startsWith(github.event.pull_request.head.ref || github.head_ref, 'release/v')
    needs: [test]
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: release
          ref: ${{ github.head_ref }}          

      - id: release
        name: get version
        run: |
          HEAD_REF=$(printf "%q" "${{ github.event.pull_request.head.ref || github.head_ref }}")
          HEAD_REF=${HEAD_REF/release\/}
          echo "HEAD_REF=${HEAD_REF}"
          echo "version=${HEAD_REF}" >> "$GITHUB_OUTPUT"        

      - name: build docker
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ github.repository }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          buildoptions: "--force-rm"
          tags: "${{ steps.release.outputs.version }}"

      - name: update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}